export function getStoryInspiration(): string {
    const genres = [
        'A horror',
        'An adventure',
        'A mystery',
        'A romance',
        'A science fiction',
        'A fantasy',
        'A thriller',
        'A comedy',
        'A historical fiction',
        'A memoir',
        'A crime',
        'A drama',
        'A biography',
        'A historical',
        'A true'
    ];
    const actors = [
        'an old man with gray hair and a hat',
        'a young woman with a secret',
        'a fearless explorer',
        'a cunning detective',
        'a brave warrior',
        'a time-traveling scientist',
        'a magical creature',
        'an robot',
        'a rebel leader',
        'a pirate captain',
        'a renowned scientist',
        'a famous athlete',
        'a dedicated teacher',
        'a courageous firefighter',
        'a skilled musician',
        'a struggling artist with a unique vision',
        'a determined journalist seeking truth',
        'a retired military officer with a mission',
        'a brilliant but eccentric professor',
        'a talented chef with a troubled past',
        'a resourceful survivalist',
        'a compassionate doctor in a remote area',
        'a skilled mechanic with a hidden talent',
        'a determined archaeologist on a quest',
        'a charismatic politician with a secret',
        'a dedicated environmentalist',
        'a skilled pilot with a mysterious past',
        'a talented photographer who captures the unusual',
        'a determined social worker making a difference',
        'a skilled carpenter with a special gift',
        'a dedicated nurse with a sixth sense',
        'a talented dancer with a hidden agenda',
        'a skilled gardener with a green thumb',
        'a dedicated librarian with a vast knowledge',
        'a talented sculptor with a unique perspective',
        'a skilled blacksmith with ancient techniques',
        'a dedicated veterinarian with a special connection',
        'a talented architect with a vision',
        'a skilled fisherman with local legends',
        'a dedicated park ranger with wilderness knowledge',
        'a talented potter with a family tradition',
        'a skilled jeweler with a rare gem',
        'a dedicated tour guide with local secrets',
        'a talented glassblower with a family legacy'
    ];
    const subordinates = [
        'explores with a ghost',
        'teams up with a mysterious stranger',
        'investigates a hidden realm',
        'uncovers ancient secrets',
        'battles unseen forces',
        'searches for a lost artifact',
        'leads a revolution',
        'solves an ancient mystery',
        'survives a natural disaster',
        'discovers a new dimension',
        'overcomes personal challenges',
        'solves a complex problem',
        'leads a community project',
        'uncovers hidden truths',
        'achieves a lifelong dream',
        'discovers a family secret',
        'finds an unexpected ally',
        'learns a forgotten skill',
        'discovers a hidden talent',
        'finds a rare opportunity',
        'learns to trust again',
        'finds inner strength',
        'discovers a new purpose',
        'finds a way to help others',
        'learns to forgive',
        'finds a second chance',
        'discovers a hidden community',
        'finds a lost connection',
        'learns to embrace change',
        'finds a new perspective',
        'discovers a hidden path',
        'finds a way to make peace',
        'learns to accept the past',
        'finds a way to move forward',
        'discovers a hidden strength',
        'finds a way to heal',
        'learns to let go',
        'finds a way to belong',
        'discovers a hidden truth',
        'finds a way to connect',
        'learns to embrace diversity',
        'finds a way to contribute',
        'discovers a hidden resource',
        'finds a way to adapt',
        'learns to appreciate differences'
    ];
    const places = [
        'in a mansion in America',
        'in an abandoned castle',
        'on a remote island',
        'in a futuristic city',
        'in a small village',
        'in a parallel universe',
        'on a distant planet',
        'in the heart of a jungle',
        'beneath the ocean',
        'within a virtual reality',
        'in a bustling city',
        'in a small rural town',
        'at a prestigious university',
        'in a war-torn country',
        'on an international space station',
        'in a historic neighborhood',
        'in a coastal fishing village',
        'in a mountain retreat',
        'in a desert oasis',
        'in a forest preserve',
        'in a suburban community',
        'in a bustling marketplace',
        'in a quiet library',
        'in a busy hospital',
        'in a peaceful monastery',
        'in a vibrant arts district',
        'in a remote research station',
        'in a traditional village',
        'in a modern metropolis',
        'in a historic district',
        'in a peaceful garden',
        'in a busy airport',
        'in a quiet cemetery',
        'in a vibrant nightlife district',
        'in a historic battlefield',
        'in a peaceful lake house',
        'in a busy train station',
        'in a quiet castle',
        'in a vibrant sports arena',
        'in a historic courthouse',
        'in a peaceful park',
        'in a busy shopping district',
        'in a quiet museum',
        'in a vibrant theater district',
        'in a historic lighthouse'
    ];
    const centuries = [
        'in the 1800 century',
        'in the 2500 century',
        'in the Middle Ages',
        'in the 21st century',
        'in a distant future',
        'during the Stone Age',
        'in the Renaissance period',
        'in the 1960s',
        'in the 22nd century',
        'in the future',
        'in the 19th century',
        'in the present day',
        'during a war',
        'in the early 2000s',
        'in the near future',
    ];

    const genre = getRandomElement(genres);
    const actor = getRandomElement(actors);
    const subordinate = getRandomElement(subordinates);
    const place = getRandomElement(places);
    const century = getRandomElement(centuries, 0.1, true);
    return `${genre} story about ${actor} who ${subordinate} ${place}${century}.`;
}

function getRandomElement(array: string[], nothingChance: number = 0, addSpace: boolean = false) {
    if (Math.random() < nothingChance) {
        return '';
    }
    const space = addSpace ? ' ' : '';
    return space + array[Math.floor(Math.random() * array.length)];
}

export function getRandomStoryPerspective(): string {
    const perspectives = [
        'first-person perspective (told through their own eyes)',
        'second-person perspective (narrated directly to the reader)',
        'third-person perspective (observed by an outside narrator)',
        'multiple perspectives (from multiple characters\' viewpoints)',
        'epistolary perspective (through diary entries and letters)',
        'third-person omniscient (as an omniscient observer who knows all)',
        'third-person limited (focusing closely on one character\'s thoughts)',
    ];
    return getRandomElement(perspectives);
}